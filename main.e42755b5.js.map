{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","form","createElement","tbody","tBodyRows","rows","thead","tH","querySelectorAll","magicValue","activeCell","sortDirection","usdNum","str","Number","replace","addRowToTable","name","position","office","age","salary","newRow","insertRow","cells","i","push","insertCell","textContent","clearInputFields","forEach","input","value","pushNotification","posTop","posRight","title","description","type","notification","titleElement","descriptionElement","className","classList","add","style","top","right","appendChild","setTimeout","remove","method","action","innerHTML","append","addEventListener","e","preventDefault","nameInput","positionInput","officeInput","ageInput","salaryInput","nameValue","trim","positionValue","ageValue","salaryValue","length","test","isNaN","lastElementChild","ev","sortByIndex","indexOf","target","sort","a","b","aIn","bIn","numA","numB","localeCompare","row","closest","r","cell","cellValue","isSalaryCell","cellIndex","isAgeCell","focus","newValue","key"],"mappings":"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","file":"main.e42755b5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\nconst tbody = document.querySelector('tbody');\nconst tBodyRows = [...tbody.rows];\nconst thead = document.querySelector('thead');\nconst tH = thead.querySelectorAll('th');\nconst magicValue = 4;\nlet activeCell = null;\nlet sortDirection = 1;\n\nform.className = 'new-employee-form';\nform.method = 'post';\nform.action = '';\n\nform.innerHTML = `\n  <label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\" required></label>\n  <label>Position: \n    <input data-qa=\"position\" name=\"position\" type=\"text\" required>\n  </label>\n  <label>Office:\n    <select data-qa=\"office\" name=\"office\" required readonly>\n      <option selected>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n  <label>Age: \n    <input data-qa=\"age\" name=\"age\" type=\"number\" required min=\"1\">\n  </label>\n  <label>Salary: \n    <input data-qa=\"salary\" name=\"salary\" type=\"number\" required min=\"1\">\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nbody.append(form);\n\nfunction usdNum(str) {\n  return Number(str.replace(/\\D/g, ''));\n}\n\nfunction addRowToTable(name, position, office, age, salary) {\n  const newRow = tbody.insertRow();\n  const cells = [];\n\n  for (let i = 0; i < 5; i++) {\n    cells.push(newRow.insertCell());\n  }\n\n  cells[0].textContent = name;\n  cells[1].textContent = position;\n  cells[2].textContent = office;\n  cells[3].textContent = age;\n  cells[4].textContent = '$' + salary;\n}\n\nfunction clearInputFields() {\n  const inputs = form.querySelectorAll('input, select');\n\n  inputs.forEach((input) => (input.value = ''));\n}\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const descriptionElement = document.createElement('p');\n\n  titleElement.className = 'title';\n  titleElement.textContent = title;\n  descriptionElement.textContent = description;\n  notification.className = 'notification';\n  notification.classList.add(type);\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n  notification.appendChild(titleElement);\n  notification.appendChild(descriptionElement);\n  body.appendChild(notification);\n  setTimeout(() => notification.remove(), 2000);\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeInput = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const nameValue = nameInput.value.trim();\n  const positionValue = positionInput.value.trim();\n  const ageValue = Number(ageInput.value);\n  const salaryValue = Number(salaryInput.value);\n\n  if (nameValue.length < magicValue) {\n    pushNotification(\n      10, 10, 'Error', 'Name must be at least 4 characters long.', 'error'\n    );\n  } else if (!/^\\S+$/.test(nameValue)) {\n    pushNotification(\n      10, 10, 'Error', 'Name cannot consist of white spaces only.', 'error'\n    );\n  } else if (positionValue.length === 0) {\n    pushNotification(\n      10, 10, 'Error', 'Position cannot be empty.', 'error'\n    );\n  } else if (isNaN(ageValue) || ageValue < 18 || ageValue > 90) {\n    pushNotification(\n      10, 10, 'Error', 'Age must be between 18 and 90.', 'error'\n    );\n  } else if (isNaN(salaryValue) || salaryValue < 1) {\n    pushNotification(\n      10, 10, 'Error', 'Salary must be a positive number.', 'error'\n    );\n  } else {\n    addRowToTable(\n      nameValue,\n      positionValue,\n      officeInput.value,\n      ageValue,\n      salaryValue\n    );\n\n    clearInputFields();\n\n    pushNotification(\n      10, 10, 'Success', 'Employee added to the table successfully.', 'success'\n    );\n\n    tBodyRows.push(tbody.lastElementChild);\n  }\n});\n\nthead.addEventListener('click', (ev) => {\n  const sortByIndex = [...tH].indexOf(ev.target);\n\n  tBodyRows.sort((a, b) => {\n    const aIn = a.cells[sortByIndex].textContent;\n    const bIn = b.cells[sortByIndex].textContent;\n    const numA = usdNum(aIn);\n    const numB = usdNum(bIn);\n\n    if (numA !== numB) {\n      return (numA - numB) * sortDirection;\n    } else {\n      return aIn.localeCompare(bIn) * sortDirection;\n    }\n  });\n\n  tbody.innerHTML = '';\n  tbody.append(...tBodyRows);\n\n  if (activeCell) {\n    activeCell = tbody.querySelector('.editing');\n  }\n\n  sortDirection *= -1;\n});\n\ntbody.addEventListener('click', (ev) => {\n  const row = ev.target.closest('tr');\n\n  if (row) {\n    tBodyRows.forEach((r) => r.classList.remove('active'));\n    row.classList.add('active');\n  }\n});\n\ntbody.addEventListener('dblclick', (ev) => {\n  const cell = ev.target.closest('td');\n\n  if (cell) {\n    if (activeCell) {\n      activeCell.textContent = cell.querySelector('input').value;\n      activeCell.classList.remove('editing');\n    }\n    activeCell = cell;\n\n    const cellValue = cell.textContent;\n    const isSalaryCell = cell.cellIndex === 4;\n    const isAgeCell = cell.cellIndex === 3;\n\n    cell.innerHTML = `<input type=\"text\" value=\"${cellValue}\">`;\n    cell.classList.add('editing');\n\n    const input = cell.querySelector('input');\n\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      const newValue = input.value;\n\n      if (newValue.trim() === '') {\n        cell.textContent = cellValue;\n      } else if (isSalaryCell) {\n        if (!isNaN(newValue) && Number(newValue) >= 0) {\n          cell.textContent = '$' + newValue;\n        } else {\n          pushNotification(\n            10,\n            10,\n            'Error',\n            'Salary must be a positive number.',\n            'error'\n          );\n          cell.textContent = cellValue;\n        }\n      } else if (isAgeCell) {\n        if (!isNaN(newValue) && Number(newValue) >= 18 && Number(newValue) <= 90) {\n          cell.textContent = newValue;\n        } else {\n          pushNotification(\n            10, 10, 'Error', 'Age must be between 18 and 90.', 'error'\n          );\n          cell.textContent = cellValue;\n        }\n      } else {\n        cell.textContent = newValue;\n      }\n\n      cell.classList.remove('editing');\n      activeCell = null;\n    });\n\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        const newValue = input.value;\n\n        if (newValue.trim() === '') {\n          cell.textContent = cellValue;\n        } else if (isSalaryCell) {\n          if (!isNaN(newValue) && Number(newValue) >= 1) {\n            cell.textContent = '$' + newValue;\n          } else {\n            pushNotification(\n              10,\n              10,\n              'Error',\n              'Salary must be a positive number.',\n              'error'\n            );\n            cell.textContent = cellValue;\n          }\n        } else if (isAgeCell) {\n          if (!isNaN(newValue) && Number(newValue) >= 1) {\n            cell.textContent = newValue;\n          } else {\n            pushNotification(\n              10,\n              10,\n              'Error',\n              'Age must be a positive number.',\n              'error'\n            );\n            cell.textContent = cellValue;\n          }\n        } else {\n          cell.textContent = newValue;\n        }\n\n        cell.classList.remove('editing');\n        activeCell = null;\n      }\n    });\n  }\n});\n"]}